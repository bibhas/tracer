[doctest] run with "--help" for options
===============================================================================
test.cpp(6)
subcases

===============================================================================
test.cpp(6)
subcases
  2

test.cpp(11) FAILED! 
  CHECK( 0 )
with expansion:
  CHECK( 0 )

===============================================================================
test.cpp(41)
expressions should be evaluated only once

test.cpp(43) PASSED!
  REQUIRE( ++a == 6 )
with expansion:
  REQUIRE( 6 == 6 )

test.cpp(44) PASSED!
  REQUIRE_EQ( ++a, 7 )
with expansion:
  REQUIRE_EQ( 7, 7 )

===============================================================================
test.cpp(47)
assertions

test.cpp(48) PASSED!
  CHECK( true )
with expansion:
  CHECK( true )

test.cpp(49) FAILED! 
  CHECK( 1 == 0 )
with expansion:
  CHECK( 1 == 0 )

test.cpp(50) FAILED! 
  CHECK_FALSE( 1 )
with expansion:
  CHECK_FALSE( 1 )

test.cpp(53) FAILED! 
  CHECK( a == b )
with expansion:
  CHECK( myType! == myType! )

test.cpp(54) FAILED! 
  CHECK( Approx(0.1) == 0.2 )
with expansion:
  CHECK( Approx( 0.1 ) == 0.2 )

test.cpp(56) PASSED!
  CHECK_THROWS( throws(true) )

test.cpp(57) FAILED!
  CHECK_THROWS( throws(false) )

test.cpp(58) PASSED!
  CHECK_NOTHROW( throws(false) )

test.cpp(59) FAILED!
  CHECK_NOTHROW( throws(true) )

test.cpp(60) PASSED!
  CHECK_THROWS_AS( throws(true), bool )

test.cpp(61) FAILED! (didn't throw at all)
  REQUIRE_THROWS_AS( throws(false), bool )

===============================================================================
test.cpp(64)
assertions - all of them

test.cpp(65) PASSED!
  WARN( true )
with expansion:
  WARN( true )

test.cpp(66) PASSED!
  CHECK( true )
with expansion:
  CHECK( true )

test.cpp(67) PASSED!
  REQUIRE( true )
with expansion:
  REQUIRE( true )

test.cpp(68) PASSED!
  WARN_FALSE( false )
with expansion:
  WARN_FALSE( false )

test.cpp(69) PASSED!
  CHECK_FALSE( false )
with expansion:
  CHECK_FALSE( false )

test.cpp(70) PASSED!
  REQUIRE_FALSE( false )
with expansion:
  REQUIRE_FALSE( false )

test.cpp(71) PASSED!
  WARN_THROWS( throws(true) )

test.cpp(72) PASSED!
  CHECK_THROWS( throws(true) )

test.cpp(73) PASSED!
  REQUIRE_THROWS( throws(true) )

test.cpp(74) PASSED!
  WARN_THROWS_AS( throws(true), bool )

test.cpp(75) PASSED!
  CHECK_THROWS_AS( throws(true), bool )

test.cpp(76) PASSED!
  REQUIRE_THROWS_AS( throws(true), bool )

test.cpp(77) PASSED!
  WARN_NOTHROW( throws(false) )

test.cpp(78) PASSED!
  CHECK_NOTHROW( throws(false) )

test.cpp(79) PASSED!
  REQUIRE_NOTHROW( throws(false) )

test.cpp(80) PASSED!
  WARN_EQ( 1, 1 )
with expansion:
  WARN_EQ( 1, 1 )

test.cpp(81) PASSED!
  CHECK_EQ( 1, 1 )
with expansion:
  CHECK_EQ( 1, 1 )

test.cpp(82) PASSED!
  REQUIRE_EQ( 1, 1 )
with expansion:
  REQUIRE_EQ( 1, 1 )

test.cpp(83) PASSED!
  WARN_NE( 1, 0 )
with expansion:
  WARN_NE( 1, 0 )

test.cpp(84) PASSED!
  CHECK_NE( 1, 0 )
with expansion:
  CHECK_NE( 1, 0 )

test.cpp(85) PASSED!
  REQUIRE_NE( 1, 0 )
with expansion:
  REQUIRE_NE( 1, 0 )

test.cpp(86) PASSED!
  WARN_GT( 1, 0 )
with expansion:
  WARN_GT( 1, 0 )

test.cpp(87) PASSED!
  CHECK_GT( 1, 0 )
with expansion:
  CHECK_GT( 1, 0 )

test.cpp(88) PASSED!
  REQUIRE_GT( 1, 0 )
with expansion:
  REQUIRE_GT( 1, 0 )

test.cpp(89) PASSED!
  WARN_LT( 0, 1 )
with expansion:
  WARN_LT( 0, 1 )

test.cpp(90) PASSED!
  CHECK_LT( 0, 1 )
with expansion:
  CHECK_LT( 0, 1 )

test.cpp(91) PASSED!
  REQUIRE_LT( 0, 1 )
with expansion:
  REQUIRE_LT( 0, 1 )

test.cpp(92) PASSED!
  WARN_GE( 1, 1 )
with expansion:
  WARN_GE( 1, 1 )

test.cpp(93) PASSED!
  CHECK_GE( 1, 1 )
with expansion:
  CHECK_GE( 1, 1 )

test.cpp(94) PASSED!
  REQUIRE_GE( 1, 1 )
with expansion:
  REQUIRE_GE( 1, 1 )

test.cpp(95) PASSED!
  WARN_LE( 1, 1 )
with expansion:
  WARN_LE( 1, 1 )

test.cpp(96) PASSED!
  CHECK_LE( 1, 1 )
with expansion:
  CHECK_LE( 1, 1 )

test.cpp(97) PASSED!
  REQUIRE_LE( 1, 1 )
with expansion:
  REQUIRE_LE( 1, 1 )

test.cpp(98) PASSED!
  WARN_UNARY( 1 )
with expansion:
  WARN_UNARY( 1 )

test.cpp(99) PASSED!
  CHECK_UNARY( 1 )
with expansion:
  CHECK_UNARY( 1 )

test.cpp(100) PASSED!
  REQUIRE_UNARY( 1 )
with expansion:
  REQUIRE_UNARY( 1 )

test.cpp(101) PASSED!
  WARN_UNARY_FALSE( 0 )
with expansion:
  WARN_UNARY_FALSE( 0 )

test.cpp(102) PASSED!
  CHECK_UNARY_FALSE( 0 )
with expansion:
  CHECK_UNARY_FALSE( 0 )

test.cpp(103) PASSED!
  REQUIRE_UNARY_FALSE( 0 )
with expansion:
  REQUIRE_UNARY_FALSE( 0 )

test.cpp(104) PASSED!
  FAST_WARN_EQ( 1, 1 )
with expansion:
  FAST_WARN_EQ( 1, 1 )

test.cpp(105) PASSED!
  FAST_CHECK_EQ( 1, 1 )
with expansion:
  FAST_CHECK_EQ( 1, 1 )

test.cpp(106) PASSED!
  FAST_REQUIRE_EQ( 1, 1 )
with expansion:
  FAST_REQUIRE_EQ( 1, 1 )

test.cpp(107) PASSED!
  FAST_WARN_NE( 1, 0 )
with expansion:
  FAST_WARN_NE( 1, 0 )

test.cpp(108) PASSED!
  FAST_CHECK_NE( 1, 0 )
with expansion:
  FAST_CHECK_NE( 1, 0 )

test.cpp(109) PASSED!
  FAST_REQUIRE_NE( 1, 0 )
with expansion:
  FAST_REQUIRE_NE( 1, 0 )

test.cpp(110) PASSED!
  FAST_WARN_GT( 1, 0 )
with expansion:
  FAST_WARN_GT( 1, 0 )

test.cpp(111) PASSED!
  FAST_CHECK_GT( 1, 0 )
with expansion:
  FAST_CHECK_GT( 1, 0 )

test.cpp(112) PASSED!
  FAST_REQUIRE_GT( 1, 0 )
with expansion:
  FAST_REQUIRE_GT( 1, 0 )

test.cpp(113) PASSED!
  FAST_WARN_LT( 0, 1 )
with expansion:
  FAST_WARN_LT( 0, 1 )

test.cpp(114) PASSED!
  FAST_CHECK_LT( 0, 1 )
with expansion:
  FAST_CHECK_LT( 0, 1 )

test.cpp(115) PASSED!
  FAST_REQUIRE_LT( 0, 1 )
with expansion:
  FAST_REQUIRE_LT( 0, 1 )

test.cpp(116) PASSED!
  FAST_WARN_GE( 1, 1 )
with expansion:
  FAST_WARN_GE( 1, 1 )

test.cpp(117) PASSED!
  FAST_CHECK_GE( 1, 1 )
with expansion:
  FAST_CHECK_GE( 1, 1 )

test.cpp(118) PASSED!
  FAST_REQUIRE_GE( 1, 1 )
with expansion:
  FAST_REQUIRE_GE( 1, 1 )

test.cpp(119) PASSED!
  FAST_WARN_LE( 1, 1 )
with expansion:
  FAST_WARN_LE( 1, 1 )

test.cpp(120) PASSED!
  FAST_CHECK_LE( 1, 1 )
with expansion:
  FAST_CHECK_LE( 1, 1 )

test.cpp(121) PASSED!
  FAST_REQUIRE_LE( 1, 1 )
with expansion:
  FAST_REQUIRE_LE( 1, 1 )

test.cpp(122) PASSED!
  FAST_WARN_UNARY( 1 )
with expansion:
  FAST_WARN_UNARY( 1 )

test.cpp(123) PASSED!
  FAST_CHECK_UNARY( 1 )
with expansion:
  FAST_CHECK_UNARY( 1 )

test.cpp(124) PASSED!
  FAST_REQUIRE_UNARY( 1 )
with expansion:
  FAST_REQUIRE_UNARY( 1 )

test.cpp(125) PASSED!
  FAST_WARN_UNARY_FALSE( 0 )
with expansion:
  FAST_WARN_UNARY_FALSE( 0 )

test.cpp(126) PASSED!
  FAST_CHECK_UNARY_FALSE( 0 )
with expansion:
  FAST_CHECK_UNARY_FALSE( 0 )

test.cpp(127) FAILED! 
  FAST_REQUIRE_UNARY_FALSE( 1 )
with expansion:
  FAST_REQUIRE_UNARY_FALSE( 1 )

===============================================================================
test.cpp(130)
throws

TEST CASE FAILED! (threw exception)

===============================================================================
[doctest] test cases:    5 |    1 passed |    4 failed |    2 skipped
[doctest] assertions:   56 |   47 passed |    9 failed |
